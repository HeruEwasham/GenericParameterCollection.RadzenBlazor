@page "/"
@using YngveHestem.GenericParameterCollection;
@using YngveHestem.GenericParameterCollection.RadzenBlazor;
@using Radzen;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<Radzen.Blazor.RadzenCard>
    <Radzen.Blazor.RadzenText TextStyle="Radzen.Blazor.TextStyle.DisplayH2">Parameters</Radzen.Blazor.RadzenText>
    <ParameterCollectionView @ref="_parameterCollectionView" ParameterCollection="@_parameters" Options="@_options" OnChange="@(args => {
                                                                                                                                    _parameters = args.NewParameterCollection;
                                                                                                                                    Console.WriteLine($"{DateTime.Now}: ParameterCollection got update. Parameter updated was {args.ParameterKey ?? string.Empty}.");
                                                                                                                                    })"></ParameterCollectionView>
</Radzen.Blazor.RadzenCard>

<Radzen.Blazor.RadzenButton Text="Update ParameterCollection manually" Click="@((args) => _parameters = _parameterCollectionView!.ParameterCollection!)"></Radzen.Blazor.RadzenButton>

<Radzen.Blazor.RadzenTextArea Cols="150" Rows="20" ReadOnly="true" Value="@_parameters.ToString()"></Radzen.Blazor.RadzenTextArea>

@code {
    private ParameterCollection _parameters = new ParameterCollection
    {
        { "TestString", "This is a test" },
        { "TestString Multiline", "This is a test.\n\nTest123.", true },
        { "TestString Password", string.Empty, new ParameterCollection
    {
                { "isPassword", true}
            }
        },
        { "TestInt", 15 },
        { "TestFloat", 15.01f },
        { "testFloat with desc", 15.05f, new ParameterCollection
            {
                { "name", "Testing Float with tooltip" },
                { "tooltip", "This is a tooltip." }
            }
        },
        { "Some options", new ParameterCollection
            {
                { "string 1", "This is a string." },
                { "Select an option", "Option 5", new string[] { "Option 1", "Option 2", "Option 3", "Option 4", "Option 5", "Option 6" } }
            }
        },
        { "Select some bytes", new byte[] {1, 3, 5} },
        { "Are this any good (default version)?", true },
        { "Are this any good (checkbox veraion)?", true, new ParameterCollection
            {
                { "boolControl", "Checkbox" }
            }
        },
        { "Are this any good (switch veraion)?", true, new ParameterCollection
            {
                { "boolControl", "Switch" }
            }
        },
        { "What variant do you like best?", Variant.Outlined },
        { "Select a date and a time", DateTime.Now },
        { "Select a date", DateTime.Now, true },
        { "Select a date between today and 10 days from today", DateTime.Now, true, new ParameterCollection
            {
                { "minDate", DateTime.Today },
                { "maxDate", DateTime.Today.AddDays(10) }
            }
        },
        { "A list of strings", new string[] { "Object 1", "Object 2", "Object 3" } },
        { "Select one or more options (or none)", new string[] {}, new string[] { "Option 1", "Option 2", "Option 3", "Option 4", "Option 5", "Option 6" } },
        { "A list of int's", new int[] { 1, 2, 3 } },
        /*{ "A list of float's", new float[] { 1.0f, 2.5f, 3.45f } },
        { "A list of bool's", new bool[] { true, true, false } },
        { "A list of date and time's", new DateTime[] { DateTime.Now, DateTime.UnixEpoch, DateTime.UtcNow } },
        { "A list of only date's", new DateTime[] { DateTime.Now, DateTime.UnixEpoch, DateTime.UtcNow }, true },
        { "A list of ParameterCollection with a few parameters",
            new ParameterCollection[] {
                new ParameterCollection
                {
                    { "Name", "Sherlock Holmes" },
                    { "Work", "Detective" },
                    { "Is fictional", true }
                },
                new ParameterCollection
                {
                    { "Name", "Albert Einstein" },
                    { "Work", "Theoretical physicist" },
                    { "Is fictional", false }
                }
            }, new ParameterCollection
            {
                { "defaultValue",
                    new ParameterCollection
                    {
                        { "Name", string.Empty },
                        { "Work", string.Empty },
                        { "Is fictional", false }
                    }
                }
            }
        },*/
    };

        private ParameterCollectionViewOptions _options = new ParameterCollectionViewOptions
        {
            PlaceholderText = "This is a placeholder text.",
            AllowFloatingLabel = false
        };

        private ParameterCollectionView? _parameterCollectionView;
    }